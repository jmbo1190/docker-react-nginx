server {
    listen 80;
    server_name localhost;

    # Development-specific settings
    client_max_body_size 100M;
    proxy_read_timeout 300;
    proxy_connect_timeout 300;

    # Enable proper MIME type detection
    include /etc/nginx/mime.types;
    types {
        application/javascript js;
        text/css css;
        application/json map;
    }
    default_type application/octet-stream;

    # Common proxy settings
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # API location block - Update to ensure proper routing
    location /api/ {
        rewrite ^/api/(.*) /$1 break;
        proxy_pass http://api:5000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection 'keep-alive';
        
        # Remove the forced Content-Type header
        # add_header Content-Type application/json;

        # Add CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;

        # Handle OPTIONS request
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Generic React App Static Files Handler
    location ~ ^/(test-counter|test-api-client)/static/.*$ {
        proxy_pass http://$1:3000;
        proxy_hide_header Content-Type;
        proxy_set_header Host $host;
        
        # Set correct MIME types without duplicates
        add_header Content-Type $content_type always;
    }

    # Generic React App WebSocket Handler
    location ~ ^/(test-counter|test-api-client)/ws$ {
        proxy_pass http://$1:3000/ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
    }

    # Generic React App Main Handler
    location ~ ^/(test-counter|test-api-client)/ {
        proxy_pass http://$1:3000/;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
    }

    # Default redirect
    location = / {
        return 301 /test-counter/;
    }

    # Favicon handling
    location = /favicon.ico {
        access_log off;
        log_not_found off;
        return 204;
    }
}

